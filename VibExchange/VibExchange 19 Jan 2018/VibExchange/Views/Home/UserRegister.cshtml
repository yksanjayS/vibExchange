@model VibExchange.Models.UserRegisterViewModel

@{
    ViewBag.Title = "User Register";
    Layout = "~/Views/Shared/_VibExchangeLayout.cshtml";
}
<div class="container row-fluid">
    <h4 style="color: chocolate">User Registration >> </h4>

    @using (Html.BeginForm("UserRegister", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="padding-left: 40px">
            <div class="form-group ">
                @Html.LabelFor(model => model.uName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.uName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.uName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.UserName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ">
                @Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.uCompany, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.uCompany, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.uCompany, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.uMobile, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.uMobile, new { @class = "form-control", onkeypress = "return isNumberKey(event)" })
                    @Html.ValidationMessageFor(model => model.uMobile, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                    @Html.CheckBoxFor(model => model.TermsAndConditions)
                    @Html.LabelFor(model => model.TermsAndConditions)
                    @Html.ValidationMessageFor(model => model.TermsAndConditions)
                </div>*@
            <div class="form-group">
                <div class="col-md-6 control-label">
                    @Html.CheckBoxFor(model => model.TermsAndConditions, new { @id = "chkcondition" })
                    I agree to the <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a>
                    <br />
                    @Html.ValidationMessageFor(model => model.TermsAndConditions, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Login", "Login", "Home")
    </div>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script language="javascript" type="text/javascript">
    //var numChecked = $('#TermsAndConditions').find('input:checked').length;
    //if (numChecked === 0) {
    //    alert('Please accept term and condition');
    //}


    function AcceptTermAndcondition() {

        if ($("#TermsAndConditions").is(':checked')) {
            return true;
        }
        else {
            alert("Please accept term and condition");
            return false;
        }
    }
</script>
<script type="text/javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
